# -*- coding: utf-8 -*-
"""Maitri_Python Fundamentals.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/112LaphwAy_xbZX0DUv1jsxeYse4T7pyT

<a href="https://colab.research.google.com/github/afeld/python-public-policy/blob/master/hw_0.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>

# Homework 0: Python fundamentals

[Kaggle](https://www.kaggle.com/) is a data science platform that has various [tutorials](https://www.kaggle.com/learn/overview) and [competitions](https://www.kaggle.com/competitions), which you may want to go back to later. You are welcome to create a Kaggle account to save your progress, but it's not required.

Kaggle, like Google Colab, is built around Jupyter notebooks. Therefore, the two are not _exactly_ the same, but will feel similar. For this homework:

1. Do following Kaggle [Learn Python](https://www.kaggle.com/learn/python) tutorials and exercises:
    - [Hello, Python](https://www.kaggle.com/colinmorris/hello-python)
    - [Booleans and Conditionals](https://www.kaggle.com/colinmorris/booleans-and-conditionals)
    - [Strings and Dictionaries](https://www.kaggle.com/colinmorris/strings-and-dictionaries)
1. Do the coding challenges below
1. Do the following Kaggle tutorials and exercises:
    - [Python Lists](https://www.kaggle.com/colinmorris/lists)
    - [Creating, Reading, and Writing with Pandas](https://www.kaggle.com/residentmario/creating-reading-and-writing)
1. Fill in one or more questions at the bottom
1. [Turn in the assignment](https://github.com/afeld/python-public-policy#turning-in-assignments)

## Coding

### Getting input

To get information from a user, we can use Python's [`input()`](https://docs.python.org/3/library/functions.html#input) function.
"""

word = input("Give me a word: ")
word

"""##HW0 Assignment | Python Coding for Policy
Name: Maitri Pujara

Date: 28 October, 2020
"""

print("Hello Everyone!")
print("Let's get started.")

"""### Challege 0: Mad lib

You are going to make a (short) interactive [mad lib](https://hobbylark.com/party-games/How-to-Make-Your-Own-Mad-Libs). Use a paragraph of a story or the chorus from a song, or make one up. Prompt for each of the words ("noun", "verb", "vehicle", etc.), then once they are all entered, it output the mad lib with the provided words filled in. You will be using multiple `inputs()` and string concatentation.

Note: I have made three different examples for challenge-0

Thank you for your understanding!
"""

#Example-1
color = input("Enter a color: ")
plural_noun = input("Enter a Plural Noun: ")
celebrity = input("Enter a celebrity: ")

print("Roses are " +  color)
print(plural_noun + " are blue")
print("I love " + celebrity)

#Example-2
noun1 = input("Enter an animal: ")
noun2 = input("Enter another animal: ")
noun3 = input("Enter an object: ")                                                    
 
print("The " + noun1 + " and the " + noun2 + " went to sea in a beautiful pea green " + noun3)

#Example-3
name = input("Enter a name: ")
verb1 = input("Enter an 'ing' verb: ")
articles1 = input("Enter the article: ")
student_type = input("Enter a type of student: ")
degree_name1 = input("Enter a type of degree: ")
university_name = input("Enter the university name: ")
verb2 = input("Enter an 'ing' verb: ")
specialization = input("Enter the specialization name")
name = input("Enter a name: ")
verb3 = input("Enter a simple verb: ")
articles = input("Enter the article: ")
degree_name2 = input("Enter a type of degree: ")
Pronoun = input("Enter a pronoun: ")
verb4 = input("Enter a simple verb: ")
print(name+" is "+verb1+articles1+student_type+" student in "+degree_name1+" at "+university_name+verb2+" with "+specialization+'.'+name+" also "+verb3+" background in "+degree_name2+"."+" As an architect and urban planner,"+Pronoun+verb4+" that no matter what your profession is, one should always contribute to the transformation and improvement of your surrounding. " + " Thank you for your time. " + " Have a great day ahead. ")



"""### Numeric input

`input()` always returns a string. To get a number from a user in Python, you need to convert that input into a integer (or float).
"""

num = input("Pick a number, any number. Please enter the value without commas or decimals. > ")
num

type(num)

int(num)

"""### Challenge 1: Unemployment benefit eligibility assessment

We will now make an interactive tool to assess people for unemployment benefits. We will a simplified version of [the rules from the New York State Department of Labor](https://www.labor.ny.gov/formsdocs/ui/TC318.3e.pdf#page=15). To be elegible, one must:

- Have lost employment
- Have made at least $10,000 in the past year
    - Ask for their salary rather than as a yes-or-no question
- Be ready, willing and able to work immediately
- Be actively seeking work

Ask the user questions corresponding to the above, then print `"You are eligible"` or `"You are not eligible"` at the end. You will need:

- `input()`s
- `int()`
- Conditional(s)

**Part:1 | Employment Eligibility**
"""

#Part-1a | Have lost Employment
Employment = input("Enter the reason: ")
if Employment == ('Layoff' or 'No Fault of Personal own'):
    print('You are eligible')
else:
    print('You are not eligible')

#Part-1b | Have lost Employment
Employment = input("Enter the reason: ")
if Employment == ('Layoff' or 'No Fault of Personal own'):
    print('You are eligible')
else:
    print('You are not eligible')

"""**Part:2** | **Salary Eligibility**"""

#Part-2 | Have made at least $10,000 in past year
#Earnings required to qualify for benefits
#Condition-i. You must have worked and been paid wages in jobs covered by Unemployment Insurance in at least two calendar quarters (Given | Page-10)
Unemployment_insurance = input("Enter the value (Did it atleast cover two calendar quarters?): ")

#Condition-ii. For claims filed in 2020, you must have been paid at least $2,600 in one calendar quarter (Given | Page-10)
#For claims effective January 6, 2020 or later, the minimum weekly benefit rate is $104 (Given | Page-11)
Weekly_Benefit_Rate= 104 
Highest_Quater_Rate = 104 * 26
print("Final Highest Quater Rate=",Highest_Quater_Rate)

#Extra step in condition-ii | I just wanted to explore this Yes/No section. (I hope you understand)
one_calendar_quater_requirement = 2600
Final_Highest_Quarter_Rate = 2704
def earning_required_for_benefits(one_calendar_quater):
  """Can he/she eligible for benefits?"""
  # New York State Department of Labor Document suggests that it should be at least $ 2600 in one calendar quater
  return one_calendar_quater >= 2600
print("Can he/she eligible for benefits?", earning_required_for_benefits(2704))

#Condition-iii. The total wages paid to you must be at least 1.5 times the amount paid to you in your high quarter (Given | Page-10)
Final_Highest_Quater_Rate = 2704
Base_Period_for_all_quaters = (2704 * 1.5)
print("Final Base Period for four quaters=", Base_Period_for_all_quaters)

# Final Part-2a
Salary = float(input("Enter a value: "))
if Salary > 10000:
  print('You are eligible')
elif Salary == 10000:
  print('You are eligible')
else:
  print('You are not eligible')

#Final Part-2b
Salary = float(input("Enter a value: "))
if Salary > 10000:
  print('You are eligible')
elif Salary == 10000:
  print('You are eligible')
else:
  print('You are not eligible')

"""**Part:3** | **Willingness to Work**"""

#Part-3a | Be Ready, willing and able to work immediately
Willingness = input("Enter a value: ")
if Willingness == 'Yes':
  print('You are eligible')
else:
  print('You are not eligible')

#Part-3b | Be Ready, willing and able to work immediately
Willingness = input("Enter a value: ")
if Willingness == 'Yes':
  print('You are eligible')
else:
  print('You are not eligible')

"""**Part:4** | **Immediate Joinee or not Findings**"""

#Part-4a | Be Actively seeking work
Immediate_Joinee = input("Enter a value: ")
if Immediate_Joinee == 'Yes':
  print('You are eligible')
else:
  print('You are not eligible')

#Part-4b | Be Actively seeking work
Immediate_Joinee = input("Enter a value: ")
if Immediate_Joinee == 'Yes':
  print('You are eligible')
else:
  print('You are not eligible')

"""**Final Output for Challenge-1 | Part:5 | Conclusion**"""

#Final-1
Salary = 10000 

Employment = input("Enter the reason: ")
Salary_Eligibility = int(input("Enter a value: "))
Willingness = input("Enter a value: ")
Immediate_Joinee = input("Enter a value: ")
if Employment == "Layoff" and Salary_Eligibility >= Salary and Willingness == 'Yes' and Immediate_Joinee == 'Yes':
    print('You are eligible')
else:
    print('You are not eligible')
print()

#Final-2
Salary = 10000 

Employment = input("Enter the reason: ")
Salary_Eligibility = int(input("Enter a value: "))
Willingness = input("Enter a value: ")
Immediate_Joinee = input("Enter a value: ")
if Employment == "Layoff" and Salary_Eligibility >= Salary and Willingness == 'Yes' and Immediate_Joinee == 'Yes':
    print('You are eligible')
else:
    print('You are not eligible')
print()

"""## Questions

What's at least one question you had from the tutorials? `Start a New Conversation` in [the Forum](https://newclasses.nyu.edu/portal/site/c07b0a52-cea7-453b-8198-4b59fdeb32f0/tool/4521fda4-a04b-471d-9042-426a7b9f218e/discussionForum/message/dfAllMessages).
"""